### https://github.com/DataDog/helm-charts/blob/main/charts/datadog/values.yaml

        ## https://docs.datadoghq.com/agent/kubernetes/helm/

datadog-agent:
  targetSystem: "linux"

  datadog:
    # datadog.apiKeyExistingSecret -- Use existing Secret which stores API key instead of creating a new one. The value should be set with the `api-key` key inside the secret.

    apiKeyExistingSecret:  datadog-agent
    
    clusterName:  minikube-cluster
    site:  datadoghq.eu
    logLevel: info  # Set logging verbosity, valid log levels are: trace, debug, info, warn, error, critical, off
    kubeStateMetricsEnabled: true
      ## ref: https://docs.datadoghq.com/agent/autodiscovery/clusterchecks/
      ## Autodiscovery via Kube Service annotations is automatically enabled
    clusterChecks:
      enabled: true # Enable the Cluster Checks feature on both the cluster-agents and the daemonset
    env:
      - name: DD_KUBELET_TLS_VERIFY
        value: "false"
      - name: DD_DOGSTATSD_METRICS_STATS_ENABLE
        value: "true"
      - name: DD_DOGSTATSD_MAPPER_PROFILES
        value: >
                [{"prefix":"airflow.","name":"airflow","mappings":[{"name":"airflow.job.start","match":"airflow.*_start","tags":{"job_name":"$1"}},{"name":"airflow.job.end","match":"airflow.*_end","tags":{"job_name":"$1"}},{"name":"airflow.job.heartbeat.failure","match":"airflow.*_heartbeat_failure","tags":{"job_name":"$1"}},{"name":"airflow.operator_failures","match":"airflow.operator_failures_*","tags":{"operator_name":"$1"}},{"name":"airflow.operator_successes","match":"airflow.operator_successes_*","tags":{"operator_name":"$1"}},{"match_type":"regex","name":"airflow.dag_processing.last_runtime","match":"airflow\\.dag_processing\\.last_runtime\\.(.*)","tags":{"dag_file":"$1"}},{"match_type":"regex","name":"airflow.dag_processing.last_run.seconds_ago","match":"airflow\\.dag_processing\\.last_run\\.seconds_ago\\.(.*)","tags":{"dag_file":"$1"}},{"match_type":"regex","name":"airflow.dag.loading_duration","match":"airflow\\.dag\\.loading-duration\\.(.*)","tags":{"dag_file":"$1"}},{"name":"airflow.dagrun.first_task_scheduling_delay","match":"airflow.dagrun.*.first_task_scheduling_delay","tags":{"dag_id":"$1"}},{"name":"airflow.pool.open_slots","match":"airflow.pool.open_slots.*","tags":{"pool_name":"$1"}},{"name":"airflow.pool.queued_slots","match":"airflow.pool.queued_slots.*","tags":{"pool_name":"$1"}},{"name":"airflow.pool.running_slots","match":"airflow.pool.running_slots.*","tags":{"pool_name":"$1"}},{"name":"airflow.pool.used_slots","match":"airflow.pool.used_slots.*","tags":{"pool_name":"$1"}},{"name":"airflow.pool.starving_tasks","match":"airflow.pool.starving_tasks.*","tags":{"pool_name":"$1"}},{"match_type":"regex","name":"airflow.dagrun.dependency_check","match":"airflow\\.dagrun\\.dependency-check\\.(.*)","tags":{"dag_id":"$1"}},{"match_type":"regex","name":"airflow.dag.task.duration","match":"airflow\\.dag\\.(.*)\\.([^.]*)\\.duration","tags":{"dag_id":"$1","task_id":"$2"}},{"match_type":"regex","name":"airflow.dag_processing.last_duration","match":"airflow\\.dag_processing\\.last_duration\\.(.*)","tags":{"dag_file":"$1"}},{"match_type":"regex","name":"airflow.dagrun.duration.success","match":"airflow\\.dagrun\\.duration\\.success\\.(.*)","tags":{"dag_id":"$1"}},{"match_type":"regex","name":"airflow.dagrun.duration.failed","match":"airflow\\.dagrun\\.duration\\.failed\\.(.*)","tags":{"dag_id":"$1"}},{"match_type":"regex","name":"airflow.dagrun.schedule_delay","match":"airflow\\.dagrun\\.schedule_delay\\.(.*)","tags":{"dag_id":"$1"}},{"name":"airflow.scheduler.tasks.running","match":"airflow.scheduler.tasks.running"},{"name":"airflow.scheduler.tasks.starving","match":"airflow.scheduler.tasks.starving"},{"name":"airflow.sla_email_notification_failure","match":"airflow.sla_email_notification_failure"},{"match_type":"regex","name":"airflow.dag.task_removed","match":"airflow\\.task_removed_from_dag\\.(.*)","tags":{"dag_id":"$1"}},{"match_type":"regex","name":"airflow.dag.task_restored","match":"airflow\\.task_restored_to_dag\\.(.*)","tags":{"dag_id":"$1"}},{"name":"airflow.task.instance_created","match":"airflow.task_instance_created-*","tags":{"task_class":"$1"}},{"name":"airflow.ti.start","match":"airflow.ti.start.*.*","tags":{"dag_id":"$1","task_id":"$2"}},{"name":"airflow.ti.finish","match":"airflow.ti.finish.*.*.*","tags":{"dag_id":"$1","state":"$3","task_id":"$2"}}]}]
    collectEvents: true   ## ref: https://docs.datadoghq.com/agent/kubernetes/#event-collection
    
    dogstatsd:
      port: 8125
      useHostPort: true
      nonLocalTraffic: true

    ## Enable logs agent and provide custom configs
    logs:
      ## ref: https://docs.datadoghq.com/agent/basic_agent_usage/kubernetes/#log-collection-setup
      enabled: false
      ## ref: https://docs.datadoghq.com/agent/basic_agent_usage/kubernetes/#log-collection-setup
      containerCollectAll: false

    ## ref: https://docs.datadoghq.com/graphing/infrastructure/process/#kubernetes-daemonset
    processAgent:
      enabled: true
      processCollection: true
      stripProcessArguments: true # DD hides sensitive arguments by default that match "password", "passwd", "mysql_pwd", "access_token", "auth_token", "api_key", "apikey", "secret", "credentials", "stripetoken"
      processDiscovery: true # datadog.processAgent.processDiscovery -- Enables or disables autodiscovery of integrations

    ## ref: https://docs.datadoghq.com/integrations/helm/
    helmCheck:
      enabled: true
      collectEvents: true

    ## ref: https://docs.datadoghq.com/network_monitoring/performance/
    networkMonitoring:
      enabled: true    # Enable network performance monitoring
    
    ## Enable security agent and provide custom configs
    securityAgent:
      compliance:
        # datadog.securityAgent.compliance.enabled -- Set to true to enable Cloud Security Posture Management (CSPM)
        enabled: false

        # datadog.securityAgent.compliance.configMap -- Contains CSPM compliance benchmarks that will be used
        configMap:

        # datadog.securityAgent.compliance.checkInterval -- Compliance check run interval
        checkInterval: 20m

      runtime:
        # datadog.securityAgent.runtime.enabled -- Set to true to enable Cloud Workload Security (CWS)
        enabled: false

        # datadog.securityAgent.runtime.fimEnabled -- Set to true to enable Cloud Workload Security (CWS) File Integrity Monitoring
        fimEnabled: false

        policies:
          # datadog.securityAgent.runtime.policies.configMap -- Contains CWS policies that will be used
          configMap:

        syscallMonitor:
          # datadog.securityAgent.runtime.syscallMonitor.enabled -- Set to true to enable the Syscall monitoring (recommended for troubleshooting only)
          enabled: false

        network:
          # datadog.securityAgent.runtime.network.enabled -- Set to true to enable the collection of CWS network events
          enabled: false

  ## This is the Datadog Cluster Agent implementation that handles cluster-wide
  ## metrics more cleanly, separates concerns for better rbac, and implements
  ## the external metrics API so you can autoscale HPAs based on datadog metrics
  ## ref: https://docs.datadoghq.com/agent/kubernetes/cluster/

  clusterAgent:
    enabled: true
    replicas: 1   # Specify the of cluster agent replicas, if > 1 it allow the cluster agent to work in HA mode.

    admissionController:
      # clusterAgent.admissionController.enabled -- Enable the admissionController to be able to inject APM/Dogstatsd config and standard tags (env, service, version) automatically into your pods
      enabled: true

      # clusterAgent.admissionController.mutateUnlabelled -- Enable injecting config without having the pod label 'admission.datadoghq.com/enabled="true"'
      mutateUnlabelled: false

      # clusterAgent.admissionController.configMode -- The kind of configuration to be injected, it can be "hostip", "service", or "socket".

      ## If clusterAgent.admissionController.configMode is not set, the Admission Controller defaults to hostip.
      ## Note: "service" mode relies on the internal traffic service to target the agent running on the local node (requires Kubernetes v1.22+).
      ## ref: https://docs.datadoghq.com/agent/cluster_agent/admission_controller/#configure-apm-and-dogstatsd-communication-mode
      configMode:  # "hostip", "socket" or "service"

      # clusterAgent.admissionController.failurePolicy -- Set the failure policy for dynamic admission control.'

      ## The default of Ignore means that pods will still be admitted even if the webhook is unavailable to inject them.
      ## Setting to Fail will require the admission controller to be present and pods to be injected before they are allowed to run.
      failurePolicy: Ignore

  agents:
    enabled: true
